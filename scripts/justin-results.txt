(and   
 (in' ?x1)
 (context' ?x1))

(and
 (analogy#n#2' ?x1)
 (mimic#a#1' ?x1)
 (pattern#v#1' ?x2)
 (across#r#1' ?x1 ?x3)
 (context#n#2' ?x3)
 (via' ?x3 ?x4)
 (cross-domain#n#3' ?x4)
 (relation#n#2' ?x4)
 (cyc-Relation ?x4 ?x5)
 (word' ?x5)
 (sense#n#1' ?x5)
 (triangulation#n#2' ?x5))

(and
 (cross-domain#n#3' ?x1)
 (relation#n#2' ?x1)
 (go#n#1' ?e4 ?x1)
 (from#v#1' ?e4 ?x2)
 (domain' ?x2)
 (to#n#2' ?e4 ?x1 ?e5)
 (domain' ?e5 ?x1)
 (when#n#2' ?e5 ?e6)
 (range' ?x3)
 (be#n#7' ?e6 ?x3)
 (same' ?x3))

(and
 (example#n#1' ?x1)
 (cyc-BeingSomething ?e5 ?x1 ?x2)
 (overlap#n#1' ?x2)
 (of' ?x2 ?x3)
 (pattern#n#3' ?x3)
 (from' ?x2 ?x4)
 (cyc-Different-Situation ?x4)
 (context#n#2' ?x4))

(and
 (that' ?x1)
 (be' ?e4 ?x1 ?x2)
 (basis#n#2' ?x2)
 (of' ?x2 ?x3)
 (analogical#a#1' ?x3)
 (reasoning#v#1' ?x3))

(and
 (once#r#3' ?e5)
 (repetition#n#1' ?x1)
 (cyc-BeingSomething ?e3 ?x1 ?e4)
 (map#v#3' ?e4 ?x1)
 (cyc-BeingSomething ?x2)
 (be' ?e5 ?x2)
 (noticable' ?x2))

(and
 (example#n#1' ?x1)
 (of' ?x1 ?x2)
 (that' ?x2)
 (cyc-BeingSomething ?e4 ?x1 ?x3)
 (cyc-Partition-ConstructionArtifact ?x3)
 (section#n#14' ?x3)
 (line#n#26' ?x3))

(and
 (imagine#v#1' ?e5 ?x1)
 (ordered#v#9' ?x1)
 (stack#v#2' ?x1)
 (of' ?x1 ?x2)
 (transparent#a#4' ?x2)
 (cyc-Film-SheetOrCoating ?x2)
 (slide#n#6' ?x2)
 (with' ?x2 ?x3)
 (identical#a#1' ?x3)
 (cyc-CircularRegion ?x3)
 (cyc-DeviceRunning ?x3 ?x4)
 (each#a#1' ?x4))

(and
 (with' ?e7 ?x1)
 (color#n#1' ?x1)
 (per' ?x1 ?x2)
 (slide#n#2' ?x2)
 (equiangl#n#26' ?e6 ?x3)
 (line#v#1' ?x3)
 (intersect' ?e7 ?x3 ?x4)
 (center#n#2' ?x4)
 (point' ?x4)
 (of' ?x4 ?x5)
 (projection' ?x5))

(and
 (prime#v#3' ?x1)
 (cyc-Lining-LyingInACertainLocation ?x1)
 (in#n#1' ?x1 ?x2)
 (stack#n#4' ?x2)
 (cyc-BeingSomething ?e3 ?x1)
 (noticable' ?x1)
 (and' ?x1))

(and
 (overlap#n#1' ?e8 ?e9 ?x1)
 (line#n#18' ?x1)
 (in#n#1' ?x1 ?x2)
 (stack#n#4' ?x2)
 (cyc-BeingSomething ?e9 ?x3)
 (repetition#n#3' ?x3)
 (or#n#1' ?x4 ?x3 ?x5)
 (they' ?x5)
 (similar#a#3' ?x3)
 (to' ?x3 ?x6)
 (composite#n#2' ?x6)
 (of' ?x6 ?x7)
 (prime#a#2' ?x7)
 (cyc-Number-General ?x7))

(and
 (repetition' ?x1)
 (and' ?x2 ?x1 ?x3)
 (unique#a#3' ?x3)
 (equi-angle' ?x3)
 (make#n#1' ?e6 ?x1 ?x4)
 (pattern#a#1' ?x4)
 (noticable#n#3' ?x4)
 (in' ?x4 ?x5)
 (example#n#1' ?x5))

(and
 (what' ?x1)
 (be' ?e6 ?x1 ?x2)
 (arc#n#2' ?x2)
 (angle#n#1' ?x2)
 (of' ?x2 ?x3)
 (Pi#n#2' ?x3)
 (minus#a#1' ?x4 ?x3)
 (in#n#3' ?x5)
 (cyc-Helix ?x5))

(and
 (symmetry#n#1' ?x1)
 (cyc-BeingSomething ?e4 ?x1 ?x2)
 (example#n#1' ?x2)
 (of' ?x2 ?x3)
 (internal#a#1' ?x3)
 (algebra#n#1' ?x3))

#####


(and
 (unique#a#3' ?x1)
 (symmetry#n#1' ?x1)
 (cyc-BeingSomething ?e6 ?x1 ?x2)
 (atomic#a#1' ?x2)
 (repetion' ?x2)
 (cyc-BeingSomething ?e7 ?e6 ?e8)
 (be' ?e8 ?x1 ?x3)
 (simple#n#6' ?x3)
 (form' ?x3)
 (of#n#1' ?x3 ?x4)
 (pattern#a#2' ?x4)
 (distinct#r#1' ?x3)
 (from#a#2' ?x3 ?x5)
 (seemingly#n#1' ?x5)
 (perpetual' ?x5)
 (randomness' ?x5))

(and
 (I#n#1' ?x1)
 (do#v#9' ?e3 ?x1 ?e4)
 (not#r#1' ?e4)
 (believe#v#1' ?e4 ?x1)
 (in#a#1' ?e4 ?x2)
 (ultimate#n#2' ?x2)
 (randomness' ?x2))

(and
 (analogical#a#1' ?x1)
 (mimicing#v#1' ?x1)
 (cyc-eventOutcomes ?x1)
 (in#n#3' ?x1 ?x2)
 (similar#a#3' ?x2)
 (yet#r#3' ?x2)
 (cyc-Different-Situation ?x2)
 (different#n#3' ?x2)
 (pattern' ?x2))

(and
 (truth#n#4' ?x1)
 (cyc-BeingSomething ?e4 ?x1 ?x2)
 (but#r#1' ?e5 ?e4)
 (approximation#n#1' ?x2)
 (of' ?x2 ?x3)
 (deep#a#3' ?x3)
 (truth#n#4' ?x3))

(and
 (understanding#n#2' ?x1)
 (cyc-BeingSomething ?e6 ?x1)
 (subject#n#3' ?x1)
 (to' ?x1 ?x2)
 (computational#a#1' ?x2)
 (complexity#n#1' ?x2)
 (of' ?x2 ?x3)
 (perceiver#n#1' ?x3)
 (and' ?x4 ?x3 ?x5)
 (datum#n#1' ?x5)
 (cyc-VisualPattern ?x5)
 (and' ?e7 ?e6 ?e9)
 (context#n#2' ?e8 ?x1 ?e9)
 (cyc-Perceiving ?e9 ?x1))

(and
 (Knowledge#n#1' ?x1)
 (cyc-BeingSomething ?e7 ?x1 ?x2)
 (quest#v#5' ?x2)
 (of' ?x2 ?x3)
 (cyc-FindingAPhysicalObject ?x3)
 (and#n#1' ?e8 ?e7 ?e9)
 (cyc-BeingSomething ?x4)
 (be' ?e9 ?x4 ?x5)
 (growth' ?x5)
 (of' ?x5 ?x6)
 (perceiver' ?x6))

(and
 (It#n#1' ?x1)
 (cyc-BeingSomething ?e4 ?x1)
 (how' ?e5)
 (possibility#n#3' ?x2)
 (happen#v#1' ?e5 ?x2)
 (through#a#1' ?e5 ?x3)
 (careful#a#1' ?x3)
 (navigation#n#1' ?x3))

(and
 (cyc-BeingIndentical ?e2 ?x1)
 (dead#a#1' ?x1)
 (end#n#12' ?x1))

(and
 (thought#n#2' ?x1)
 (cyc-BeingSomething ?e5 ?x1)
 (within#r#1' ?x1 ?x2)
 (thought#n#1' ?x2)
 (with#n#4' ?e5 ?x3)
 (context' ?x3)
 (for#a#1' ?x3 ?x4)
 (each' ?x4))

(and
 (for' ?e7 ?x2)
 (navigation' ?x2)
 (and' ?x1 ?x2)
 (data#n#1' ?x2)
 (retrieval#n#3' ?x2)
 (cyc-NormativeSpecification ?x2)
 (mapper#n#5' ?x3)
 (cyc-DifferenceFn ?e7 ?x3 ?x4)
 (difference#n#1' ?x4)
 (in#v#1' ?x4 ?x5)
 (mimiced#v#1' ?x5)
 (pattern#a#1' ?x5) 
 (for#n#2' ?x4 ?x6)
 (category' ?x6)
 (augmentation' ?x6))

(and
 (It' 3D?x1)
 (cyc-BeingSomething ?e3 ?x1)
 (as#n#1' ?x1)
 (simple#a#6' ?x1)
 (as#n#4' ?x1 ?x2)
 (accurate#a#1' ?x2)
 (cyc-TimeInterval ?x2)
 (stamp#n#9' ?x2))

(and
 (oversimplifcation' ?x1)
 (of' ?x1 ?x2)
 (datum' ?x2)
 (cyc-Stream ?x2)
 (in#a#1' ?e7 ?x3 ?e6)
 (order' ?x3)
 (to#a#2' ?x1 ?e6)
 (fit#n#4' ?e6 ?x1 ?x4)
 (pattern' ?x4)
 (into#n#4' ?e6 ?x5)
 (perceptual#n#5' ?x5)
 (cyc-BeingSomething ?x5)
 (cyc-BeingSomething ?e7 ?x1 ?e9)
 (cyc-AvoidingSomething ?x1 ?e9)
 (be' ?e8 ?x1 ?e9)
 (avoid' ?e9 ?x1))

(and
 (cross-domain#n#3' ?x1)
 (relation#n#2' ?x1)
 (cyc-Relation ?e5 ?x1 ?x2)
 (datum#n#6' ?x2)
 (because#n#1' ?e5 ?e6)
 (idea' ?x3)
 (cyc-Idea ?e6 ?x3)
 (cyc-SomethingExisting ?e6 ?x4)
 (epistemology' ?x4))

(and
 (lexicon#n#2' ?x1)
 (link#n#6' ?e4 ?x1 ?x2)
 (external#a#1' ?x2)
 (context#n#2' ?x2)
 (to' ?x2 ?x3)
 (extent#n#2' ?x3))

(and
 (intention' ?x1)
 (of' ?x1 ?x2)
 (essay#v#1' ?x2)
 (cyc-BeingSomething ?e5 ?x1 ?e6)
 (to' ?e6)
 (link#n#3' ?e6 ?x3)
 (cyc-Idea ?x3)
 (across#r#1' ?e6 ?x4)
 (context#n#2' ?x4))

(and
 (mind#n#1' ?x1)
 (priority#n#1' ?x2)
 (system' ?x2))

(and
 (Philosophy#n#1' ?x1)
 (cyc-BeingSomething ?e5 ?x1)
 (in#n#3' ?x1 ?x2)
 (Humanities#n#1' ?x2)
 (Department#n#1' ?x2)
 (Formal#n#1' ?x3)
 (cyc-BeingSomething ?x3)
 (be#n#4' ?e6 ?x3 ?x4)
 (science' ?x4))

(and
 (for' ?e5 ?x1)
 (alternate' ?x1)
 (route#n#2' ?x1)
 (cyc-Mathematics ?x1)
 (Cross-Domain#n#2' ?x2)
 (Relations#n#1' ?x2)
 (go#v#1' ?e5 ?x2)
 (from' ?e5 ?x3)
 (domain#n#2' ?x3)
 (to' ?e5 ?x2 ?e6)
 (domain#n#2' ?e6 ?x2)
 (when' ?e6 ?e7)
 (range#n#7' ?x4)
 (cyc-BeingSomething ?e7 ?x4)
 (same#a#2' ?x4))
